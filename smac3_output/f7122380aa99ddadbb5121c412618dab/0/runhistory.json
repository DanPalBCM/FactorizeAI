{
  "stats": {
    "submitted": 100,
    "finished": 100,
    "running": 0
  },
  "data": [
    [
      1,
      null,
      209652396,
      null,
      1.0,
      1.4367468357086182,
      1,
      1703638805.588643,
      1703638807.026054,
      {}
    ],
    [
      1,
      null,
      398764591,
      null,
      1.0,
      1.0303881168365479,
      1,
      1703638807.028156,
      1703638808.059543,
      {}
    ],
    [
      2,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1703638808.061653,
      1703638808.0635715,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      2,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1703638808.0653167,
      1703638808.0669465,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      1,
      null,
      924231285,
      null,
      1.0,
      0.4614715576171875,
      1,
      1703638808.089396,
      1703638808.5517843,
      {}
    ],
    [
      3,
      null,
      209652396,
      null,
      0.5384835316891371,
      0.5324358940124512,
      1,
      1703638808.5541136,
      1703638809.0875387,
      {}
    ],
    [
      3,
      null,
      398764591,
      null,
      0.538483531689137,
      0.30761075019836426,
      1,
      1703638809.0916834,
      1703638809.4002717,
      {}
    ],
    [
      3,
      null,
      924231285,
      null,
      0.538483531689137,
      0.36391782760620117,
      1,
      1703638809.4042797,
      1703638809.7692044,
      {}
    ],
    [
      4,
      null,
      209652396,
      null,
      0.32300479761723,
      1.781200647354126,
      1,
      1703638809.7724257,
      1703638811.5546353,
      {}
    ],
    [
      4,
      null,
      398764591,
      null,
      0.32300479761723,
      0.20444941520690918,
      1,
      1703638811.5569482,
      1703638811.7624025,
      {}
    ],
    [
      4,
      null,
      924231285,
      null,
      0.32300479761723,
      0.16266918182373047,
      1,
      1703638811.7645442,
      1703638811.9281716,
      {}
    ],
    [
      5,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1703638811.9314623,
      1703638811.9332516,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      5,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1703638811.9355276,
      1703638811.937155,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      5,
      null,
      924231285,
      null,
      Infinity,
      0.0,
      2,
      1703638811.9393055,
      1703638811.9409308,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      6,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1703638812.2707503,
      1703638812.2724984,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      6,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1703638812.2750409,
      1703638812.2772326,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      6,
      null,
      924231285,
      null,
      Infinity,
      0.0,
      2,
      1703638812.280267,
      1703638812.282073,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      7,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1703638812.2852252,
      1703638812.2867477,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      7,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1703638812.288977,
      1703638812.2905276,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      7,
      null,
      924231285,
      null,
      Infinity,
      0.0,
      2,
      1703638812.2927125,
      1703638812.2941563,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      8,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1703638812.2973552,
      1703638812.2990966,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      8,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1703638812.301712,
      1703638812.3034408,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      8,
      null,
      924231285,
      null,
      Infinity,
      0.0,
      2,
      1703638812.3059125,
      1703638812.3076375,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      9,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1703638812.3108842,
      1703638812.3123202,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      9,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1703638812.314645,
      1703638812.3161683,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      9,
      null,
      924231285,
      null,
      Infinity,
      0.0,
      2,
      1703638812.3185449,
      1703638812.3200133,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      10,
      null,
      209652396,
      null,
      1.0,
      0.53436279296875,
      1,
      1703638812.3236656,
      1703638812.8589425,
      {}
    ],
    [
      10,
      null,
      398764591,
      null,
      1.0,
      0.2118208408355713,
      1,
      1703638812.8619156,
      1703638813.074687,
      {}
    ],
    [
      10,
      null,
      924231285,
      null,
      1.0,
      0.1648561954498291,
      1,
      1703638813.0775952,
      1703638813.2433863,
      {}
    ],
    [
      11,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1703638813.2473001,
      1703638813.249034,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      11,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1703638813.2518895,
      1703638813.2639153,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      11,
      null,
      924231285,
      null,
      Infinity,
      0.0,
      2,
      1703638813.2668388,
      1703638813.2684865,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      12,
      null,
      209652396,
      null,
      0.5802712252991391,
      0.2948737144470215,
      1,
      1703638813.2723656,
      1703638813.5780091,
      {}
    ],
    [
      12,
      null,
      398764591,
      null,
      0.5802712252991389,
      0.26164817810058594,
      1,
      1703638813.5812325,
      1703638813.8438265,
      {}
    ],
    [
      12,
      null,
      924231285,
      null,
      0.5802712252991389,
      0.4835391044616699,
      1,
      1703638813.8469114,
      1703638814.3313918,
      {}
    ],
    [
      13,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1703638814.3355768,
      1703638814.3373206,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      13,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1703638814.340326,
      1703638814.3520439,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      13,
      null,
      924231285,
      null,
      Infinity,
      0.0,
      2,
      1703638814.3550398,
      1703638814.3566089,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      14,
      null,
      209652396,
      null,
      0.14636277292390343,
      1.2475879192352295,
      1,
      1703638814.9275742,
      1703638816.1761355,
      {}
    ],
    [
      14,
      null,
      398764591,
      null,
      0.1463627728228709,
      0.5348589420318604,
      1,
      1703638816.1796997,
      1703638816.7155297,
      {}
    ],
    [
      14,
      null,
      924231285,
      null,
      0.1463627733086469,
      0.5160853862762451,
      1,
      1703638816.7190359,
      1703638817.2361002,
      {}
    ],
    [
      15,
      null,
      209652396,
      null,
      0.5708905500591401,
      0.5344817638397217,
      1,
      1703638817.241115,
      1703638817.7765534,
      {}
    ],
    [
      15,
      null,
      398764591,
      null,
      0.5708123288335798,
      0.47312355041503906,
      1,
      1703638817.780008,
      1703638818.2540674,
      {}
    ],
    [
      15,
      null,
      924231285,
      null,
      0.5708699381352149,
      0.273792028427124,
      1,
      1703638818.2573433,
      1703638818.5320263,
      {}
    ],
    [
      16,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1703638818.5364232,
      1703638818.5381145,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      16,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1703638818.551116,
      1703638818.552696,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      16,
      null,
      924231285,
      null,
      Infinity,
      0.0,
      2,
      1703638818.5686538,
      1703638818.5704026,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      17,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1703638818.5797346,
      1703638818.5813127,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      17,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1703638818.5866725,
      1703638818.5882335,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      17,
      null,
      924231285,
      null,
      Infinity,
      0.0,
      2,
      1703638818.5916624,
      1703638818.593242,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      18,
      null,
      209652396,
      null,
      1.0,
      0.3665153980255127,
      1,
      1703638818.5984843,
      1703638818.9658804,
      {}
    ],
    [
      18,
      null,
      398764591,
      null,
      1.0,
      0.3759615421295166,
      1,
      1703638818.9693785,
      1703638819.3462136,
      {}
    ],
    [
      18,
      null,
      924231285,
      null,
      1.0,
      0.2942056655883789,
      1,
      1703638819.3497858,
      1703638819.6448686,
      {}
    ],
    [
      19,
      null,
      209652396,
      null,
      0.5504618665818636,
      0.5573503971099854,
      1,
      1703638819.649596,
      1703638820.2078192,
      {}
    ],
    [
      19,
      null,
      398764591,
      null,
      0.5504618665818635,
      0.3297915458679199,
      1,
      1703638820.211415,
      1703638820.542083,
      {}
    ],
    [
      19,
      null,
      924231285,
      null,
      0.5504618665818637,
      0.20926809310913086,
      1,
      1703638820.5457406,
      1703638820.7558937,
      {}
    ],
    [
      20,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1703638820.761019,
      1703638820.7625875,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      20,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1703638820.7758594,
      1703638820.7774405,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      20,
      null,
      924231285,
      null,
      Infinity,
      0.0,
      2,
      1703638820.7812014,
      1703638820.7827795,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      21,
      null,
      209652396,
      null,
      1.0,
      0.20974159240722656,
      1,
      1703638820.7880256,
      1703638820.9986527,
      {}
    ],
    [
      21,
      null,
      398764591,
      null,
      1.0,
      0.3730900287628174,
      1,
      1703638821.002434,
      1703638821.3763998,
      {}
    ],
    [
      21,
      null,
      924231285,
      null,
      1.0,
      0.25031375885009766,
      1,
      1703638821.38169,
      1703638821.632874,
      {}
    ],
    [
      22,
      null,
      209652396,
      null,
      0.566335679326087,
      0.40160536766052246,
      1,
      1703638821.6435223,
      1703638822.0460083,
      {}
    ],
    [
      22,
      null,
      398764591,
      null,
      0.5663358236741642,
      0.4576854705810547,
      1,
      1703638822.0534053,
      1703638822.5119708,
      {}
    ],
    [
      22,
      null,
      924231285,
      null,
      0.56633554673376,
      0.5087270736694336,
      1,
      1703638822.5159323,
      1703638823.0255632,
      {}
    ],
    [
      23,
      null,
      209652396,
      null,
      0.533801991313921,
      1.018282413482666,
      1,
      1703638824.0191693,
      1703638825.038435,
      {}
    ],
    [
      23,
      null,
      398764591,
      null,
      0.533801991313921,
      0.6923468112945557,
      1,
      1703638825.0429568,
      1703638825.7363193,
      {}
    ],
    [
      23,
      null,
      924231285,
      null,
      0.533801991313921,
      1.969268560409546,
      1,
      1703638825.7464082,
      1703638827.7167954,
      {}
    ],
    [
      24,
      null,
      209652396,
      null,
      1.0,
      0.5533974170684814,
      1,
      1703638827.723686,
      1703638828.2780974,
      {}
    ],
    [
      24,
      null,
      398764591,
      null,
      1.0,
      0.6198635101318359,
      1,
      1703638828.2827272,
      1703638828.903583,
      {}
    ],
    [
      24,
      null,
      924231285,
      null,
      1.0,
      0.5251979827880859,
      1,
      1703638828.9080703,
      1703638829.4342108,
      {}
    ],
    [
      25,
      null,
      209652396,
      null,
      0.5784398023167252,
      0.4270749092102051,
      1,
      1703638829.4463387,
      1703638829.8743944,
      {}
    ],
    [
      25,
      null,
      398764591,
      null,
      0.5784398023167252,
      0.3100094795227051,
      1,
      1703638829.8789976,
      1703638830.1899543,
      {}
    ],
    [
      25,
      null,
      924231285,
      null,
      0.5784398023167252,
      0.4693424701690674,
      1,
      1703638830.1944683,
      1703638830.6647503,
      {}
    ],
    [
      26,
      null,
      209652396,
      null,
      0.5766310238898862,
      0.3869132995605469,
      1,
      1703638830.6707227,
      1703638831.05858,
      {}
    ],
    [
      26,
      null,
      398764591,
      null,
      0.5766309413210183,
      0.2657952308654785,
      1,
      1703638831.0632062,
      1703638831.3299463,
      {}
    ],
    [
      26,
      null,
      924231285,
      null,
      0.5766309891335164,
      0.15068554878234863,
      1,
      1703638831.3344517,
      1703638831.4860485,
      {}
    ],
    [
      27,
      null,
      209652396,
      null,
      0.5598665573775319,
      0.26497626304626465,
      1,
      1703638831.491701,
      1703638831.7575555,
      {}
    ],
    [
      27,
      null,
      398764591,
      null,
      0.5598665573775319,
      0.23501300811767578,
      1,
      1703638831.7618537,
      1703638831.997747,
      {}
    ],
    [
      27,
      null,
      924231285,
      null,
      0.5598665573775319,
      0.2993497848510742,
      1,
      1703638832.0020764,
      1703638832.302316,
      {}
    ],
    [
      28,
      null,
      209652396,
      null,
      1.0,
      0.18854904174804688,
      1,
      1703638832.3081584,
      1703638832.4976044,
      {}
    ],
    [
      28,
      null,
      398764591,
      null,
      1.0,
      0.15826106071472168,
      1,
      1703638832.5020301,
      1703638832.6611686,
      {}
    ],
    [
      28,
      null,
      924231285,
      null,
      1.0,
      0.15477633476257324,
      1,
      1703638832.6699953,
      1703638832.8256693,
      {}
    ],
    [
      29,
      null,
      209652396,
      null,
      0.537025082553872,
      0.2602405548095703,
      1,
      1703638832.8334396,
      1703638833.0945735,
      {}
    ],
    [
      29,
      null,
      398764591,
      null,
      0.5370251968940751,
      0.2439866065979004,
      1,
      1703638833.0991,
      1703638833.3439744,
      {}
    ],
    [
      29,
      null,
      924231285,
      null,
      0.5370252510525986,
      0.26243019104003906,
      1,
      1703638833.3485088,
      1703638833.611829,
      {}
    ],
    [
      30,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1703638833.6354468,
      1703638833.6371784,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      30,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1703638833.6522124,
      1703638833.6538,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      30,
      null,
      924231285,
      null,
      Infinity,
      0.0,
      2,
      1703638833.6584463,
      1703638833.6600325,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 738, in train\n    X, X_r = MiniBatch_NMF(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 142, in MiniBatch_NMF\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2143, in fit_transform\n    W, H, n_iter, n_steps = self._fit_transform(X, W=W, H=H)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 2195, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      31,
      null,
      209652396,
      null,
      0.5602935609560111,
      1.132753849029541,
      1,
      1703638834.8591886,
      1703638835.99335,
      {}
    ],
    [
      31,
      null,
      398764591,
      null,
      0.560293560956011,
      0.4263617992401123,
      1,
      1703638836.0027807,
      1703638836.430117,
      {}
    ],
    [
      31,
      null,
      924231285,
      null,
      0.5602935609560112,
      0.6355001926422119,
      1,
      1703638836.4353023,
      1703638837.0717714,
      {}
    ],
    [
      32,
      null,
      209652396,
      null,
      0.5613308541572032,
      0.301145076751709,
      1,
      1703638837.078801,
      1703638837.3808947,
      {}
    ],
    [
      32,
      null,
      398764591,
      null,
      0.5613307139605517,
      0.16808462142944336,
      1,
      1703638837.3857143,
      1703638837.554695,
      {}
    ],
    [
      32,
      null,
      924231285,
      null,
      0.5613307712771564,
      0.1318812370300293,
      1,
      1703638837.5595143,
      1703638837.6923044,
      {}
    ],
    [
      33,
      null,
      209652396,
      null,
      0.5767412661818133,
      0.12462639808654785,
      1,
      1703638837.6987672,
      1703638837.8242893,
      {}
    ],
    [
      33,
      null,
      398764591,
      null,
      0.5767412661818133,
      0.12235641479492188,
      1,
      1703638837.830856,
      1703638837.954115,
      {}
    ],
    [
      33,
      null,
      924231285,
      null,
      0.5767412661818132,
      0.1257154941558838,
      1,
      1703638837.9590309,
      1703638838.085644,
      {}
    ],
    [
      34,
      null,
      209652396,
      null,
      0.5674515891516558,
      0.13607382774353027,
      1,
      1703638838.092166,
      1703638838.2291472,
      {}
    ],
    [
      34,
      null,
      398764591,
      null,
      0.5674516861513889,
      0.1344001293182373,
      1,
      1703638838.23413,
      1703638838.369426,
      {}
    ]
  ],
  "configs": {
    "1": {
      "alpha_W": 0.24019066896289587,
      "batch_size": 1279,
      "beta_loss": "frobenius",
      "init": "random",
      "l1_ratio": 0.7752058510668576,
      "n_components": 10
    },
    "2": {
      "alpha_W": 0.5773453664034606,
      "batch_size": 304,
      "beta_loss": "itakura-saito",
      "init": "nndsvdar",
      "l1_ratio": 0.35275659849867225,
      "n_components": 17
    },
    "3": {
      "alpha_W": 0.7202535373158753,
      "batch_size": 1794,
      "beta_loss": "kullback-leibler",
      "init": "nndsvd",
      "l1_ratio": 0.16414819266647102,
      "n_components": 11
    },
    "4": {
      "alpha_W": 0.15716480081900955,
      "batch_size": 824,
      "beta_loss": "kullback-leibler",
      "init": "nndsvda",
      "l1_ratio": 0.528756519779563,
      "n_components": 2
    },
    "5": {
      "alpha_W": 0.024708580691367388,
      "batch_size": 1662,
      "beta_loss": "itakura-saito",
      "init": "nndsvda",
      "l1_ratio": 0.6199762070551514,
      "n_components": 7
    },
    "6": {
      "alpha_W": 0.8025957007038718,
      "batch_size": 265,
      "beta_loss": "itakura-saito",
      "init": "nndsvdar",
      "l1_ratio": 0.6136382691931351,
      "n_components": 4
    },
    "7": {
      "alpha_W": 0.6436704297351775,
      "batch_size": 828,
      "beta_loss": "itakura-saito",
      "init": "nndsvda",
      "l1_ratio": 0.5115905539817837,
      "n_components": 9
    },
    "8": {
      "alpha_W": 0.5813047017599905,
      "batch_size": 1859,
      "beta_loss": "itakura-saito",
      "init": "nndsvd",
      "l1_ratio": 0.5552405971872812,
      "n_components": 13
    },
    "9": {
      "alpha_W": 0.5424870384644795,
      "batch_size": 1605,
      "beta_loss": "itakura-saito",
      "init": "random",
      "l1_ratio": 0.016910820392719628,
      "n_components": 13
    },
    "10": {
      "alpha_W": 0.4939321535345923,
      "batch_size": 1931,
      "beta_loss": "frobenius",
      "init": "random",
      "l1_ratio": 0.4105352989948937,
      "n_components": 8
    },
    "11": {
      "alpha_W": 0.49039486469720717,
      "batch_size": 1105,
      "beta_loss": "itakura-saito",
      "init": "nndsvdar",
      "l1_ratio": 0.5558719473682894,
      "n_components": 3
    },
    "12": {
      "alpha_W": 0.3938284901364233,
      "batch_size": 235,
      "beta_loss": "kullback-leibler",
      "init": "nndsvd",
      "l1_ratio": 0.8493732706631618,
      "n_components": 5
    },
    "13": {
      "alpha_W": 0.38128931940501426,
      "batch_size": 1179,
      "beta_loss": "itakura-saito",
      "init": "nndsvda",
      "l1_ratio": 0.5508861504501793,
      "n_components": 13
    },
    "14": {
      "alpha_W": 0.28388551583176547,
      "batch_size": 1341,
      "beta_loss": "frobenius",
      "init": "nndsvdar",
      "l1_ratio": 0.28618486145457844,
      "n_components": 11
    },
    "15": {
      "alpha_W": 0.09184032967322527,
      "batch_size": 309,
      "beta_loss": "frobenius",
      "init": "random",
      "l1_ratio": 0.2388505418455009,
      "n_components": 14
    },
    "16": {
      "alpha_W": 0.5131770933760917,
      "batch_size": 986,
      "beta_loss": "itakura-saito",
      "init": "nndsvda",
      "l1_ratio": 0.05773274671390593,
      "n_components": 7
    },
    "17": {
      "alpha_W": 0.8895364542533036,
      "batch_size": 402,
      "beta_loss": "itakura-saito",
      "init": "nndsvd",
      "l1_ratio": 0.5099413087859177,
      "n_components": 4
    },
    "18": {
      "alpha_W": 0.39474136211608835,
      "batch_size": 564,
      "beta_loss": "frobenius",
      "init": "random",
      "l1_ratio": 0.6232249074330178,
      "n_components": 13
    },
    "19": {
      "alpha_W": 0.32733969384836037,
      "batch_size": 581,
      "beta_loss": "kullback-leibler",
      "init": "nndsvda",
      "l1_ratio": 0.372836695063203,
      "n_components": 17
    },
    "20": {
      "alpha_W": 0.5278616413290749,
      "batch_size": 138,
      "beta_loss": "itakura-saito",
      "init": "random",
      "l1_ratio": 0.6100348831166071,
      "n_components": 6
    },
    "21": {
      "alpha_W": 0.6616746199103354,
      "batch_size": 1929,
      "beta_loss": "frobenius",
      "init": "nndsvda",
      "l1_ratio": 0.5328377381446552,
      "n_components": 11
    },
    "22": {
      "alpha_W": 0.2007734693765565,
      "batch_size": 1911,
      "beta_loss": "kullback-leibler",
      "init": "nndsvdar",
      "l1_ratio": 0.6295313477857539,
      "n_components": 7
    },
    "23": {
      "alpha_W": 0.7935618256693675,
      "batch_size": 136,
      "beta_loss": "kullback-leibler",
      "init": "nndsvd",
      "l1_ratio": 0.13450347419219438,
      "n_components": 8
    },
    "24": {
      "alpha_W": 0.5231455853722728,
      "batch_size": 1252,
      "beta_loss": "frobenius",
      "init": "nndsvd",
      "l1_ratio": 0.8989623059110798,
      "n_components": 11
    },
    "25": {
      "alpha_W": 0.3568551667622862,
      "batch_size": 1324,
      "beta_loss": "kullback-leibler",
      "init": "nndsvd",
      "l1_ratio": 0.8275343523702062,
      "n_components": 16
    },
    "26": {
      "alpha_W": 0.6232784310699893,
      "batch_size": 673,
      "beta_loss": "kullback-leibler",
      "init": "nndsvdar",
      "l1_ratio": 0.7813134516313929,
      "n_components": 3
    },
    "27": {
      "alpha_W": 0.45119194373403204,
      "batch_size": 651,
      "beta_loss": "kullback-leibler",
      "init": "nndsvda",
      "l1_ratio": 0.5540036078554598,
      "n_components": 9
    },
    "28": {
      "alpha_W": 0.7929928774000454,
      "batch_size": 905,
      "beta_loss": "frobenius",
      "init": "nndsvdar",
      "l1_ratio": 0.6428171695942003,
      "n_components": 15
    },
    "29": {
      "alpha_W": 0.6527288518376765,
      "batch_size": 1354,
      "beta_loss": "kullback-leibler",
      "init": "nndsvdar",
      "l1_ratio": 0.14624364120873734,
      "n_components": 13
    },
    "30": {
      "alpha_W": 0.6498500395233131,
      "batch_size": 1746,
      "beta_loss": "itakura-saito",
      "init": "nndsvdar",
      "l1_ratio": 0.010542675766501775,
      "n_components": 8
    },
    "31": {
      "alpha_W": 0.048904189505328266,
      "batch_size": 160,
      "beta_loss": "kullback-leibler",
      "init": "nndsvd",
      "l1_ratio": 0.16164330980367134,
      "n_components": 5
    },
    "32": {
      "alpha_W": 0.2880154357402211,
      "batch_size": 828,
      "beta_loss": "kullback-leibler",
      "init": "nndsvdar",
      "l1_ratio": 0.5660836592320339,
      "n_components": 16
    },
    "33": {
      "alpha_W": 0.20153221925434212,
      "batch_size": 552,
      "beta_loss": "frobenius",
      "init": "nndsvd",
      "l1_ratio": 0.4083271601004408,
      "n_components": 14
    },
    "34": {
      "alpha_W": 0.15446670953529648,
      "batch_size": 1864,
      "beta_loss": "kullback-leibler",
      "init": "nndsvdar",
      "l1_ratio": 0.6267091399339135,
      "n_components": 17
    }
  },
  "config_origins": {
    "1": "Initial Design: Sobol",
    "2": "Initial Design: Sobol",
    "3": "Initial Design: Sobol",
    "4": "Initial Design: Sobol",
    "5": "Initial Design: Sobol",
    "6": "Acquisition Function Maximizer: Random Search (sorted)",
    "7": "Acquisition Function Maximizer: Random Search (sorted)",
    "8": "Acquisition Function Maximizer: Random Search (sorted)",
    "9": "Acquisition Function Maximizer: Random Search (sorted)",
    "10": "Acquisition Function Maximizer: Random Search (sorted)",
    "11": "Acquisition Function Maximizer: Random Search (sorted)",
    "12": "Acquisition Function Maximizer: Random Search (sorted)",
    "13": "Acquisition Function Maximizer: Random Search (sorted)",
    "14": "Acquisition Function Maximizer: Random Search (sorted)",
    "15": "Acquisition Function Maximizer: Random Search (sorted)",
    "16": "Acquisition Function Maximizer: Random Search (sorted)",
    "17": "Acquisition Function Maximizer: Random Search (sorted)",
    "18": "Acquisition Function Maximizer: Random Search (sorted)",
    "19": "Acquisition Function Maximizer: Random Search (sorted)",
    "20": "Random Search",
    "21": "Random Search",
    "22": "Random Search",
    "23": "Acquisition Function Maximizer: Random Search (sorted)",
    "24": "Acquisition Function Maximizer: Random Search (sorted)",
    "25": "Acquisition Function Maximizer: Random Search (sorted)",
    "26": "Acquisition Function Maximizer: Random Search (sorted)",
    "27": "Acquisition Function Maximizer: Random Search (sorted)",
    "28": "Acquisition Function Maximizer: Random Search (sorted)",
    "29": "Acquisition Function Maximizer: Random Search (sorted)",
    "30": "Random Search",
    "31": "Acquisition Function Maximizer: Random Search (sorted)",
    "32": "Random Search",
    "33": "Acquisition Function Maximizer: Random Search (sorted)",
    "34": "Acquisition Function Maximizer: Random Search (sorted)"
  }
}