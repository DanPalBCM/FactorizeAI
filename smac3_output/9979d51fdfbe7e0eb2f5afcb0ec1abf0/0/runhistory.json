{
  "stats": {
    "submitted": 100,
    "finished": 100,
    "running": 0
  },
  "data": [
    [
      1,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1703638633.1187658,
      1703638633.1206546,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 700, in train\n    X, X_r = NMF_sklearn(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 59, in NMF_sklearn\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1566, in fit_transform\n    W, H, n_iter = self._fit_transform(X, W=W, H=H)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1618, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      1,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1703638633.1223743,
      1703638633.123883,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 700, in train\n    X, X_r = NMF_sklearn(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 59, in NMF_sklearn\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1566, in fit_transform\n    W, H, n_iter = self._fit_transform(X, W=W, H=H)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1618, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      2,
      null,
      209652396,
      null,
      1.0,
      1.4890623092651367,
      1,
      1703638633.125678,
      1703638634.6157658,
      {}
    ],
    [
      2,
      null,
      398764591,
      null,
      1.0,
      0.22349166870117188,
      1,
      1703638634.6177342,
      1703638634.8422868,
      {}
    ],
    [
      2,
      null,
      924231285,
      null,
      1.0,
      0.16910219192504883,
      1,
      1703638634.8451684,
      1703638635.015474,
      {}
    ],
    [
      3,
      null,
      209652396,
      null,
      1.0,
      0.1800541877746582,
      1,
      1703638635.0178914,
      1703638635.1990187,
      {}
    ],
    [
      3,
      null,
      398764591,
      null,
      1.0,
      0.3456149101257324,
      1,
      1703638635.201136,
      1703638635.547805,
      {}
    ],
    [
      3,
      null,
      924231285,
      null,
      1.0,
      0.24650335311889648,
      1,
      1703638635.5500052,
      1703638635.7975702,
      {}
    ],
    [
      4,
      null,
      209652396,
      null,
      0.5714030554597078,
      0.25548672676086426,
      1,
      1703638635.8005655,
      1703638636.0571356,
      {}
    ],
    [
      4,
      null,
      398764591,
      null,
      0.5714030554597078,
      0.2183372974395752,
      1,
      1703638636.0594358,
      1703638636.278841,
      {}
    ],
    [
      4,
      null,
      924231285,
      null,
      0.5714030554597078,
      0.22787213325500488,
      1,
      1703638636.2811048,
      1703638636.510204,
      {}
    ],
    [
      5,
      null,
      209652396,
      null,
      0.5800915518324326,
      0.19594955444335938,
      1,
      1703638636.5137315,
      1703638636.7107396,
      {}
    ],
    [
      5,
      null,
      398764591,
      null,
      0.580091525631141,
      0.2529032230377197,
      1,
      1703638636.7131746,
      1703638636.9671495,
      {}
    ],
    [
      5,
      null,
      924231285,
      null,
      0.5800914593893556,
      0.3050365447998047,
      1,
      1703638636.9697375,
      1703638637.2758613,
      {}
    ],
    [
      6,
      null,
      209652396,
      null,
      1.0,
      0.19504451751708984,
      1,
      1703638637.6318321,
      1703638637.827576,
      {}
    ],
    [
      6,
      null,
      398764591,
      null,
      1.0,
      0.31531739234924316,
      1,
      1703638637.8301432,
      1703638638.1464982,
      {}
    ],
    [
      6,
      null,
      924231285,
      null,
      1.0,
      0.28911638259887695,
      1,
      1703638638.1490939,
      1703638638.439251,
      {}
    ],
    [
      7,
      null,
      209652396,
      null,
      0.5744313257150402,
      0.21227073669433594,
      1,
      1703638638.4427912,
      1703638638.6561048,
      {}
    ],
    [
      7,
      null,
      398764591,
      null,
      0.5744313257150402,
      0.3086841106414795,
      1,
      1703638638.6587367,
      1703638638.9684594,
      {}
    ],
    [
      7,
      null,
      924231285,
      null,
      0.5744313257150402,
      0.3372528553009033,
      1,
      1703638638.9710877,
      1703638639.3093722,
      {}
    ],
    [
      8,
      null,
      209652396,
      null,
      1.0,
      0.2807130813598633,
      1,
      1703638639.312965,
      1703638639.5947108,
      {}
    ],
    [
      8,
      null,
      398764591,
      null,
      1.0,
      0.28722548484802246,
      1,
      1703638639.597419,
      1703638639.8856754,
      {}
    ],
    [
      8,
      null,
      924231285,
      null,
      1.0,
      0.2851738929748535,
      1,
      1703638639.8923094,
      1703638640.1785653,
      {}
    ],
    [
      9,
      null,
      209652396,
      null,
      1.0,
      0.41556620597839355,
      1,
      1703638640.1822767,
      1703638640.5988696,
      {}
    ],
    [
      9,
      null,
      398764591,
      null,
      1.0,
      0.4039778709411621,
      1,
      1703638640.6016567,
      1703638641.0066652,
      {}
    ],
    [
      9,
      null,
      924231285,
      null,
      1.0,
      0.38870811462402344,
      1,
      1703638641.0093336,
      1703638641.3990433,
      {}
    ],
    [
      10,
      null,
      209652396,
      null,
      1.0,
      0.3028550148010254,
      1,
      1703638641.4026647,
      1703638641.7064965,
      {}
    ],
    [
      10,
      null,
      398764591,
      null,
      1.0,
      0.1571638584136963,
      1,
      1703638641.7091331,
      1703638641.8672686,
      {}
    ],
    [
      10,
      null,
      924231285,
      null,
      1.0,
      0.19152474403381348,
      1,
      1703638641.8698897,
      1703638642.0623717,
      {}
    ],
    [
      11,
      null,
      209652396,
      null,
      0.5757987529901707,
      0.3450479507446289,
      1,
      1703638642.0661519,
      1703638642.4121678,
      {}
    ],
    [
      11,
      null,
      398764591,
      null,
      0.5757987529901707,
      0.26444435119628906,
      1,
      1703638642.4149058,
      1703638642.6803105,
      {}
    ],
    [
      11,
      null,
      924231285,
      null,
      0.5757987529901707,
      0.3970015048980713,
      1,
      1703638642.6830306,
      1703638643.080992,
      {}
    ],
    [
      12,
      null,
      209652396,
      null,
      1.0,
      0.19908738136291504,
      1,
      1703638643.0847871,
      1703638643.2848403,
      {}
    ],
    [
      12,
      null,
      398764591,
      null,
      1.0,
      0.1889030933380127,
      1,
      1703638643.2876365,
      1703638643.4775093,
      {}
    ],
    [
      12,
      null,
      924231285,
      null,
      1.0,
      0.3219492435455322,
      1,
      1703638643.4803164,
      1703638643.8032317,
      {}
    ],
    [
      13,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1703638643.8071458,
      1703638643.808909,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 700, in train\n    X, X_r = NMF_sklearn(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 59, in NMF_sklearn\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1566, in fit_transform\n    W, H, n_iter = self._fit_transform(X, W=W, H=H)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1618, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      13,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1703638643.8118742,
      1703638643.8237717,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 700, in train\n    X, X_r = NMF_sklearn(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 59, in NMF_sklearn\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1566, in fit_transform\n    W, H, n_iter = self._fit_transform(X, W=W, H=H)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1618, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      13,
      null,
      924231285,
      null,
      Infinity,
      0.0,
      2,
      1703638643.8268657,
      1703638643.8284972,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 700, in train\n    X, X_r = NMF_sklearn(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 59, in NMF_sklearn\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1566, in fit_transform\n    W, H, n_iter = self._fit_transform(X, W=W, H=H)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1618, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      14,
      null,
      209652396,
      null,
      1.0,
      0.982907772064209,
      1,
      1703638644.4721029,
      1703638645.456201,
      {}
    ],
    [
      14,
      null,
      398764591,
      null,
      1.0,
      0.4143795967102051,
      1,
      1703638645.461216,
      1703638645.8766344,
      {}
    ],
    [
      14,
      null,
      924231285,
      null,
      1.0,
      0.4063889980316162,
      1,
      1703638645.8801117,
      1703638646.2875853,
      {}
    ],
    [
      15,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1703638646.2922623,
      1703638646.294106,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 700, in train\n    X, X_r = NMF_sklearn(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 59, in NMF_sklearn\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1566, in fit_transform\n    W, H, n_iter = self._fit_transform(X, W=W, H=H)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1618, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      15,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1703638646.307359,
      1703638646.309035,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 700, in train\n    X, X_r = NMF_sklearn(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 59, in NMF_sklearn\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1566, in fit_transform\n    W, H, n_iter = self._fit_transform(X, W=W, H=H)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1618, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      15,
      null,
      924231285,
      null,
      Infinity,
      0.0,
      2,
      1703638646.3122022,
      1703638646.3138347,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 700, in train\n    X, X_r = NMF_sklearn(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 59, in NMF_sklearn\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1566, in fit_transform\n    W, H, n_iter = self._fit_transform(X, W=W, H=H)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1618, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      16,
      null,
      209652396,
      null,
      1.0,
      1.3653218746185303,
      1,
      1703638646.3281453,
      1703638647.6944525,
      {}
    ],
    [
      16,
      null,
      398764591,
      null,
      1.0,
      1.1512818336486816,
      1,
      1703638647.7012646,
      1703638648.8536148,
      {}
    ],
    [
      16,
      null,
      924231285,
      null,
      1.0,
      0.33974647521972656,
      1,
      1703638648.8575056,
      1703638649.198334,
      {}
    ],
    [
      17,
      null,
      209652396,
      null,
      0.5701508475956931,
      0.6812636852264404,
      1,
      1703638649.2031791,
      1703638649.8854952,
      {}
    ],
    [
      17,
      null,
      398764591,
      null,
      0.5701508475678578,
      0.45835304260253906,
      1,
      1703638649.8892295,
      1703638650.3486557,
      {}
    ],
    [
      17,
      null,
      924231285,
      null,
      0.5701508484592901,
      0.5961940288543701,
      1,
      1703638650.3523808,
      1703638650.9496386,
      {}
    ],
    [
      18,
      null,
      209652396,
      null,
      0.5454135999163479,
      1.2534856796264648,
      1,
      1703638650.9608197,
      1703638652.2153513,
      {}
    ],
    [
      18,
      null,
      398764591,
      null,
      0.545113891671285,
      0.6693425178527832,
      1,
      1703638652.2192605,
      1703638652.8896623,
      {}
    ],
    [
      18,
      null,
      924231285,
      null,
      0.5445195551139834,
      0.5159265995025635,
      1,
      1703638652.8977973,
      1703638653.4147894,
      {}
    ],
    [
      19,
      null,
      209652396,
      null,
      0.5611586845841131,
      0.6652090549468994,
      1,
      1703638653.420411,
      1703638654.0866582,
      {}
    ],
    [
      19,
      null,
      398764591,
      null,
      0.561158684584113,
      0.853252649307251,
      1,
      1703638654.0905285,
      1703638654.9448092,
      {}
    ],
    [
      19,
      null,
      924231285,
      null,
      0.561158684584113,
      0.8392481803894043,
      1,
      1703638654.953523,
      1703638655.7938614,
      {}
    ],
    [
      20,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1703638655.7998612,
      1703638655.801808,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 700, in train\n    X, X_r = NMF_sklearn(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 59, in NMF_sklearn\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1566, in fit_transform\n    W, H, n_iter = self._fit_transform(X, W=W, H=H)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1618, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      20,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1703638655.8174505,
      1703638655.8191118,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 700, in train\n    X, X_r = NMF_sklearn(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 59, in NMF_sklearn\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1566, in fit_transform\n    W, H, n_iter = self._fit_transform(X, W=W, H=H)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1618, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      20,
      null,
      924231285,
      null,
      Infinity,
      0.0,
      2,
      1703638655.823025,
      1703638655.824673,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 700, in train\n    X, X_r = NMF_sklearn(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 59, in NMF_sklearn\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1566, in fit_transform\n    W, H, n_iter = self._fit_transform(X, W=W, H=H)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1618, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      21,
      null,
      209652396,
      null,
      0.5536580051406769,
      0.633805513381958,
      1,
      1703638655.838371,
      1703638656.4731646,
      {}
    ],
    [
      21,
      null,
      398764591,
      null,
      0.553658005140677,
      0.5415890216827393,
      1,
      1703638656.477282,
      1703638657.0198884,
      {}
    ],
    [
      21,
      null,
      924231285,
      null,
      0.553658005140677,
      0.26795244216918945,
      1,
      1703638657.0277958,
      1703638657.2983744,
      {}
    ],
    [
      22,
      null,
      209652396,
      null,
      0.5793284181076362,
      0.24611377716064453,
      1,
      1703638657.3210742,
      1703638657.5681756,
      {}
    ],
    [
      22,
      null,
      398764591,
      null,
      0.5793284181076364,
      0.28925132751464844,
      1,
      1703638657.5721471,
      1703638657.862396,
      {}
    ],
    [
      22,
      null,
      924231285,
      null,
      0.5793284181076361,
      0.5061013698577881,
      1,
      1703638657.866641,
      1703638658.3737369,
      {}
    ],
    [
      23,
      null,
      209652396,
      null,
      1.0,
      1.8943793773651123,
      1,
      1703638659.416262,
      1703638661.312475,
      {}
    ],
    [
      23,
      null,
      398764591,
      null,
      1.0,
      0.6331684589385986,
      1,
      1703638661.3168995,
      1703638661.9511225,
      {}
    ],
    [
      23,
      null,
      924231285,
      null,
      1.0,
      0.6802005767822266,
      1,
      1703638661.9572666,
      1703638662.6385214,
      {}
    ],
    [
      24,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1703638662.644565,
      1703638662.6465182,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 700, in train\n    X, X_r = NMF_sklearn(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 59, in NMF_sklearn\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1566, in fit_transform\n    W, H, n_iter = self._fit_transform(X, W=W, H=H)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1618, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      24,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1703638662.661871,
      1703638662.663559,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 700, in train\n    X, X_r = NMF_sklearn(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 59, in NMF_sklearn\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1566, in fit_transform\n    W, H, n_iter = self._fit_transform(X, W=W, H=H)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1618, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      24,
      null,
      924231285,
      null,
      Infinity,
      0.0,
      2,
      1703638662.6676936,
      1703638662.6782515,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 700, in train\n    X, X_r = NMF_sklearn(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 59, in NMF_sklearn\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1566, in fit_transform\n    W, H, n_iter = self._fit_transform(X, W=W, H=H)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1618, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      25,
      null,
      209652396,
      null,
      1.0,
      0.2607588768005371,
      1,
      1703638662.6839507,
      1703638662.9457002,
      {}
    ],
    [
      25,
      null,
      398764591,
      null,
      1.0,
      0.24942851066589355,
      1,
      1703638662.9502697,
      1703638663.2007196,
      {}
    ],
    [
      25,
      null,
      924231285,
      null,
      1.0,
      0.3882789611816406,
      1,
      1703638663.2052488,
      1703638663.5945637,
      {}
    ],
    [
      26,
      null,
      209652396,
      null,
      0.5349923637756469,
      2.1077091693878174,
      1,
      1703638663.604055,
      1703638665.717757,
      {}
    ],
    [
      26,
      null,
      398764591,
      null,
      0.5349923685742853,
      0.731738805770874,
      1,
      1703638665.7266903,
      1703638666.459529,
      {}
    ],
    [
      26,
      null,
      924231285,
      null,
      0.5349923597140371,
      0.3965167999267578,
      1,
      1703638666.464364,
      1703638666.86807,
      {}
    ],
    [
      27,
      null,
      209652396,
      null,
      1.0,
      0.2496166229248047,
      1,
      1703638666.8748977,
      1703638667.1255534,
      {}
    ],
    [
      27,
      null,
      398764591,
      null,
      1.0,
      0.31018567085266113,
      1,
      1703638667.1321254,
      1703638667.4479356,
      {}
    ],
    [
      27,
      null,
      924231285,
      null,
      1.0,
      0.16207456588745117,
      1,
      1703638667.4588146,
      1703638667.6219656,
      {}
    ],
    [
      28,
      null,
      209652396,
      null,
      1.0,
      1.7300102710723877,
      1,
      1703638667.628434,
      1703638669.3595023,
      {}
    ],
    [
      28,
      null,
      398764591,
      null,
      1.0,
      0.4241359233856201,
      1,
      1703638669.366551,
      1703638669.7917564,
      {}
    ],
    [
      28,
      null,
      924231285,
      null,
      1.0,
      0.7204546928405762,
      1,
      1703638669.7968059,
      1703638670.518313,
      {}
    ],
    [
      29,
      null,
      209652396,
      null,
      1.0,
      0.4259181022644043,
      1,
      1703638670.5255253,
      1703638670.9525745,
      {}
    ],
    [
      29,
      null,
      398764591,
      null,
      1.0,
      0.4761688709259033,
      1,
      1703638670.9577708,
      1703638671.4350457,
      {}
    ],
    [
      29,
      null,
      924231285,
      null,
      1.0,
      1.4872217178344727,
      1,
      1703638671.4403183,
      1703638672.940768,
      {}
    ],
    [
      30,
      null,
      209652396,
      null,
      0.5482241433389348,
      0.42434096336364746,
      1,
      1703638672.9652793,
      1703638673.390697,
      {}
    ],
    [
      30,
      null,
      398764591,
      null,
      0.5482241433389345,
      0.22886872291564941,
      1,
      1703638673.395799,
      1703638673.625709,
      {}
    ],
    [
      30,
      null,
      924231285,
      null,
      0.5482241433389348,
      0.41498446464538574,
      1,
      1703638673.6308324,
      1703638674.0468557,
      {}
    ],
    [
      31,
      null,
      209652396,
      null,
      1.0,
      2.405996799468994,
      1,
      1703638675.1810067,
      1703638677.5879898,
      {}
    ],
    [
      31,
      null,
      398764591,
      null,
      1.0,
      1.6823949813842773,
      1,
      1703638677.6048143,
      1703638679.2883773,
      {}
    ],
    [
      31,
      null,
      924231285,
      null,
      1.0,
      1.4895901679992676,
      1,
      1703638679.2943704,
      1703638680.785093,
      {}
    ],
    [
      32,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1703638680.8015358,
      1703638680.8035014,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 700, in train\n    X, X_r = NMF_sklearn(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 59, in NMF_sklearn\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1566, in fit_transform\n    W, H, n_iter = self._fit_transform(X, W=W, H=H)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1618, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      32,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1703638680.8084946,
      1703638680.810202,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 700, in train\n    X, X_r = NMF_sklearn(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 59, in NMF_sklearn\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1566, in fit_transform\n    W, H, n_iter = self._fit_transform(X, W=W, H=H)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1618, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      32,
      null,
      924231285,
      null,
      Infinity,
      0.0,
      2,
      1703638680.826481,
      1703638680.8281364,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 700, in train\n    X, X_r = NMF_sklearn(X_scaled, **config_dict)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFOptimized2.py\", line 59, in NMF_sklearn\n    W = model.fit_transform(X)\n        ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1566, in fit_transform\n    W, H, n_iter = self._fit_transform(X, W=W, H=H)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/decomposition/_nmf.py\", line 1618, in _fit_transform\n    raise ValueError(\nValueError: When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.\n",
        "error": "ValueError('When beta_loss <= 0 and X contains zeros, the solver may diverge. Please add small values to X, or use a positive beta_loss.')"
      }
    ],
    [
      33,
      null,
      209652396,
      null,
      0.14583887480218816,
      1.7469170093536377,
      1,
      1703638680.8435583,
      1703638682.5914726,
      {}
    ],
    [
      33,
      null,
      398764591,
      null,
      1.0,
      0.1272580623626709,
      1,
      1703638682.5969431,
      1703638682.7252471,
      {}
    ],
    [
      33,
      null,
      924231285,
      null,
      1.0,
      0.28118205070495605,
      1,
      1703638682.730547,
      1703638683.012768,
      {}
    ],
    [
      34,
      null,
      209652396,
      null,
      0.546957064651832,
      0.8813376426696777,
      1,
      1703638683.020119,
      1703638683.9113083,
      {}
    ],
    [
      34,
      null,
      398764591,
      null,
      0.546957064651677,
      2.246525764465332,
      1,
      1703638683.919173,
      1703638686.1667964,
      {}
    ]
  ],
  "configs": {
    "1": {
      "alpha_W": 0.24019066896289587,
      "init": "nndsvda",
      "l1_ratio": 0.09675709353759886,
      "n_components": 5,
      "solver": "mu",
      "verbose": 0,
      "beta_loss": "itakura-saito"
    },
    "2": {
      "alpha_W": 0.46588086588308214,
      "init": "random",
      "l1_ratio": 0.7556943319737911,
      "n_components": 18,
      "solver": "cd",
      "verbose": 1
    },
    "3": {
      "alpha_W": 0.749829635862261,
      "init": "nndsvdar",
      "l1_ratio": 0.44558810563758017,
      "n_components": 9,
      "solver": "cd",
      "verbose": 1
    },
    "4": {
      "alpha_W": 0.07600671239197254,
      "init": "nndsvd",
      "l1_ratio": 0.6320557817816734,
      "n_components": 14,
      "solver": "mu",
      "verbose": 0,
      "beta_loss": "kullback-leibler"
    },
    "5": {
      "alpha_W": 0.12293835282325745,
      "init": "nndsvdar",
      "l1_ratio": 0.8369933956302703,
      "n_components": 12,
      "solver": "mu",
      "verbose": 0,
      "beta_loss": "kullback-leibler"
    },
    "6": {
      "alpha_W": 0.8025957007038718,
      "init": "random",
      "l1_ratio": 0.7024762586578099,
      "n_components": 15,
      "solver": "mu",
      "verbose": 0,
      "beta_loss": "frobenius"
    },
    "7": {
      "alpha_W": 0.6436704297351775,
      "init": "nndsvd",
      "l1_ratio": 0.7493578609931442,
      "n_components": 12,
      "solver": "mu",
      "verbose": 0,
      "beta_loss": "kullback-leibler"
    },
    "8": {
      "alpha_W": 0.5813047017599905,
      "init": "nndsvdar",
      "l1_ratio": 0.7192427077950513,
      "n_components": 9,
      "solver": "mu",
      "verbose": 1,
      "beta_loss": "frobenius"
    },
    "9": {
      "alpha_W": 0.5424870384644795,
      "init": "nndsvdar",
      "l1_ratio": 0.7003410758548655,
      "n_components": 4,
      "solver": "cd",
      "verbose": 1
    },
    "10": {
      "alpha_W": 0.4939321535345923,
      "init": "nndsvdar",
      "l1_ratio": 0.018196557696293147,
      "n_components": 4,
      "solver": "cd",
      "verbose": 0
    },
    "11": {
      "alpha_W": 0.49039486469720717,
      "init": "nndsvda",
      "l1_ratio": 0.7830109334221372,
      "n_components": 18,
      "solver": "mu",
      "verbose": 0,
      "beta_loss": "kullback-leibler"
    },
    "12": {
      "alpha_W": 0.3938284901364233,
      "init": "random",
      "l1_ratio": 0.4153314260276387,
      "n_components": 6,
      "solver": "mu",
      "verbose": 0,
      "beta_loss": "frobenius"
    },
    "13": {
      "alpha_W": 0.38128931940501426,
      "init": "nndsvda",
      "l1_ratio": 0.8807565080094876,
      "n_components": 10,
      "solver": "mu",
      "verbose": 1,
      "beta_loss": "itakura-saito"
    },
    "14": {
      "alpha_W": 0.5877974929188586,
      "init": "random",
      "l1_ratio": 0.8790849793713035,
      "n_components": 7,
      "solver": "mu",
      "verbose": 1,
      "beta_loss": "frobenius"
    },
    "15": {
      "alpha_W": 0.09933762704787462,
      "init": "random",
      "l1_ratio": 0.10817690509185202,
      "n_components": 6,
      "solver": "mu",
      "verbose": 0,
      "beta_loss": "itakura-saito"
    },
    "16": {
      "alpha_W": 0.4196796955706757,
      "init": "nndsvdar",
      "l1_ratio": 0.6653372214584715,
      "n_components": 3,
      "solver": "cd",
      "verbose": 1
    },
    "17": {
      "alpha_W": 0.14307262528096776,
      "init": "nndsvdar",
      "l1_ratio": 0.2545262663187686,
      "n_components": 11,
      "solver": "cd",
      "verbose": 1
    },
    "18": {
      "alpha_W": 0.21998303280144246,
      "init": "random",
      "l1_ratio": 0.03526901302888861,
      "n_components": 13,
      "solver": "mu",
      "verbose": 0,
      "beta_loss": "kullback-leibler"
    },
    "19": {
      "alpha_W": 0.2279624422858039,
      "init": "nndsvd",
      "l1_ratio": 0.5443609677705414,
      "n_components": 9,
      "solver": "mu",
      "verbose": 0,
      "beta_loss": "kullback-leibler"
    },
    "20": {
      "alpha_W": 0.6295313477857539,
      "init": "nndsvd",
      "l1_ratio": 0.7324180377322295,
      "n_components": 8,
      "solver": "mu",
      "verbose": 1,
      "beta_loss": "itakura-saito"
    },
    "21": {
      "alpha_W": 0.6232784310699893,
      "init": "nndsvda",
      "l1_ratio": 0.45119194373403204,
      "n_components": 18,
      "solver": "mu",
      "verbose": 0,
      "beta_loss": "kullback-leibler"
    },
    "22": {
      "alpha_W": 0.017273878478400173,
      "init": "nndsvd",
      "l1_ratio": 0.5941561837434165,
      "n_components": 6,
      "solver": "mu",
      "verbose": 0,
      "beta_loss": "frobenius"
    },
    "23": {
      "alpha_W": 0.5878807378714203,
      "init": "nndsvda",
      "l1_ratio": 0.5540036078554598,
      "n_components": 9,
      "solver": "cd",
      "verbose": 1
    },
    "24": {
      "alpha_W": 0.5168927239646209,
      "init": "nndsvdar",
      "l1_ratio": 0.14624364120873734,
      "n_components": 13,
      "solver": "mu",
      "verbose": 0,
      "beta_loss": "itakura-saito"
    },
    "25": {
      "alpha_W": 0.5129684196311384,
      "init": "nndsvd",
      "l1_ratio": 0.13450347419219438,
      "n_components": 8,
      "solver": "cd",
      "verbose": 1
    },
    "26": {
      "alpha_W": 0.5868929430015201,
      "init": "random",
      "l1_ratio": 0.11143798456449737,
      "n_components": 14,
      "solver": "mu",
      "verbose": 1,
      "beta_loss": "kullback-leibler"
    },
    "27": {
      "alpha_W": 0.8068919362659567,
      "init": "nndsvda",
      "l1_ratio": 0.7265870628525096,
      "n_components": 18,
      "solver": "cd",
      "verbose": 0
    },
    "28": {
      "alpha_W": 0.5317854851233559,
      "init": "nndsvdar",
      "l1_ratio": 0.7813134516313929,
      "n_components": 3,
      "solver": "cd",
      "verbose": 0
    },
    "29": {
      "alpha_W": 0.38827659189057656,
      "init": "nndsvdar",
      "l1_ratio": 0.763207406390011,
      "n_components": 16,
      "solver": "cd",
      "verbose": 0
    },
    "30": {
      "alpha_W": 0.2807504959316417,
      "init": "nndsvd",
      "l1_ratio": 0.18885937407760994,
      "n_components": 5,
      "solver": "mu",
      "verbose": 1,
      "beta_loss": "kullback-leibler"
    },
    "31": {
      "alpha_W": 0.3909749630023087,
      "init": "nndsvd",
      "l1_ratio": 0.6825407884525273,
      "n_components": 15,
      "solver": "cd",
      "verbose": 1
    },
    "32": {
      "alpha_W": 0.6887927284262687,
      "init": "nndsvda",
      "l1_ratio": 0.8133477657713402,
      "n_components": 3,
      "solver": "mu",
      "verbose": 1,
      "beta_loss": "itakura-saito"
    },
    "33": {
      "alpha_W": 0.16164330980367134,
      "init": "random",
      "l1_ratio": 0.7479436097125713,
      "n_components": 5,
      "solver": "cd",
      "verbose": 0
    },
    "34": {
      "alpha_W": 0.22892083359335366,
      "init": "random",
      "l1_ratio": 0.23699013906343558,
      "n_components": 16,
      "solver": "mu",
      "verbose": 0,
      "beta_loss": "kullback-leibler"
    }
  },
  "config_origins": {
    "1": "Initial Design: Sobol",
    "2": "Initial Design: Sobol",
    "3": "Initial Design: Sobol",
    "4": "Initial Design: Sobol",
    "5": "Initial Design: Sobol",
    "6": "Acquisition Function Maximizer: Random Search (sorted)",
    "7": "Acquisition Function Maximizer: Random Search (sorted)",
    "8": "Acquisition Function Maximizer: Random Search (sorted)",
    "9": "Acquisition Function Maximizer: Random Search (sorted)",
    "10": "Acquisition Function Maximizer: Random Search (sorted)",
    "11": "Acquisition Function Maximizer: Random Search (sorted)",
    "12": "Acquisition Function Maximizer: Random Search (sorted)",
    "13": "Acquisition Function Maximizer: Random Search (sorted)",
    "14": "Acquisition Function Maximizer: Random Search (sorted)",
    "15": "Acquisition Function Maximizer: Random Search (sorted)",
    "16": "Acquisition Function Maximizer: Random Search (sorted)",
    "17": "Acquisition Function Maximizer: Random Search (sorted)",
    "18": "Acquisition Function Maximizer: Random Search (sorted)",
    "19": "Acquisition Function Maximizer: Random Search (sorted)",
    "20": "Random Search",
    "21": "Random Search",
    "22": "Random Search",
    "23": "Acquisition Function Maximizer: Random Search (sorted)",
    "24": "Acquisition Function Maximizer: Random Search (sorted)",
    "25": "Acquisition Function Maximizer: Random Search (sorted)",
    "26": "Acquisition Function Maximizer: Random Search (sorted)",
    "27": "Acquisition Function Maximizer: Random Search (sorted)",
    "28": "Acquisition Function Maximizer: Random Search (sorted)",
    "29": "Acquisition Function Maximizer: Random Search (sorted)",
    "30": "Random Search",
    "31": "Acquisition Function Maximizer: Random Search (sorted)",
    "32": "Random Search",
    "33": "Acquisition Function Maximizer: Random Search (sorted)",
    "34": "Acquisition Function Maximizer: Random Search (sorted)"
  }
}