{
  "stats": {
    "submitted": 10,
    "finished": 10,
    "running": 0
  },
  "data": [
    [
      1,
      null,
      209652396,
      null,
      0.2907504829457225,
      0.18210554122924805,
      1,
      1694793811.3653328,
      1694793811.548606,
      {}
    ],
    [
      1,
      null,
      398764591,
      null,
      0.2907504829457225,
      0.17869329452514648,
      1,
      1694793811.5508916,
      1694793811.7307746,
      {}
    ],
    [
      2,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1694793811.7330914,
      1694793811.740992,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFBO2.py\", line 1022, in train\n    X, X_r = Local_Linear_Embedding(X_scaled, **config_dict)\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFBO2.py\", line 164, in Local_Linear_Embedding\n    X_hat = transformer.fit_transform(X)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 799, in fit_transform\n    self._fit_transform(X)\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 746, in _fit_transform\n    self.embedding_, self.reconstruction_error_ = locally_linear_embedding(\n                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 325, in locally_linear_embedding\n    raise ValueError(\nValueError: output dimension must be less than or equal to input dimension\n",
        "error": "ValueError('output dimension must be less than or equal to input dimension')"
      }
    ],
    [
      2,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1694793811.7435398,
      1694793811.7461905,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFBO2.py\", line 1022, in train\n    X, X_r = Local_Linear_Embedding(X_scaled, **config_dict)\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFBO2.py\", line 164, in Local_Linear_Embedding\n    X_hat = transformer.fit_transform(X)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 799, in fit_transform\n    self._fit_transform(X)\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 746, in _fit_transform\n    self.embedding_, self.reconstruction_error_ = locally_linear_embedding(\n                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 325, in locally_linear_embedding\n    raise ValueError(\nValueError: output dimension must be less than or equal to input dimension\n",
        "error": "ValueError('output dimension must be less than or equal to input dimension')"
      }
    ],
    [
      1,
      null,
      924231285,
      null,
      0.2907504829457225,
      0.38172054290771484,
      1,
      1694793811.7491152,
      1694793812.1319861,
      {}
    ],
    [
      3,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1694793812.3725617,
      1694793812.374282,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFBO2.py\", line 1022, in train\n    X, X_r = Local_Linear_Embedding(X_scaled, **config_dict)\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFBO2.py\", line 164, in Local_Linear_Embedding\n    X_hat = transformer.fit_transform(X)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 799, in fit_transform\n    self._fit_transform(X)\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 746, in _fit_transform\n    self.embedding_, self.reconstruction_error_ = locally_linear_embedding(\n                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 325, in locally_linear_embedding\n    raise ValueError(\nValueError: output dimension must be less than or equal to input dimension\n",
        "error": "ValueError('output dimension must be less than or equal to input dimension')"
      }
    ],
    [
      3,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1694793812.375994,
      1694793812.3776348,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFBO2.py\", line 1022, in train\n    X, X_r = Local_Linear_Embedding(X_scaled, **config_dict)\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFBO2.py\", line 164, in Local_Linear_Embedding\n    X_hat = transformer.fit_transform(X)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 799, in fit_transform\n    self._fit_transform(X)\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 746, in _fit_transform\n    self.embedding_, self.reconstruction_error_ = locally_linear_embedding(\n                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 325, in locally_linear_embedding\n    raise ValueError(\nValueError: output dimension must be less than or equal to input dimension\n",
        "error": "ValueError('output dimension must be less than or equal to input dimension')"
      }
    ],
    [
      3,
      null,
      924231285,
      null,
      Infinity,
      0.0,
      2,
      1694793812.3792984,
      1694793812.380914,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFBO2.py\", line 1022, in train\n    X, X_r = Local_Linear_Embedding(X_scaled, **config_dict)\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFBO2.py\", line 164, in Local_Linear_Embedding\n    X_hat = transformer.fit_transform(X)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 799, in fit_transform\n    self._fit_transform(X)\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 746, in _fit_transform\n    self.embedding_, self.reconstruction_error_ = locally_linear_embedding(\n                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 325, in locally_linear_embedding\n    raise ValueError(\nValueError: output dimension must be less than or equal to input dimension\n",
        "error": "ValueError('output dimension must be less than or equal to input dimension')"
      }
    ],
    [
      4,
      null,
      209652396,
      null,
      Infinity,
      0.0,
      2,
      1694793812.3830588,
      1694793812.384661,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFBO2.py\", line 1022, in train\n    X, X_r = Local_Linear_Embedding(X_scaled, **config_dict)\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFBO2.py\", line 164, in Local_Linear_Embedding\n    X_hat = transformer.fit_transform(X)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 799, in fit_transform\n    self._fit_transform(X)\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 746, in _fit_transform\n    self.embedding_, self.reconstruction_error_ = locally_linear_embedding(\n                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 325, in locally_linear_embedding\n    raise ValueError(\nValueError: output dimension must be less than or equal to input dimension\n",
        "error": "ValueError('output dimension must be less than or equal to input dimension')"
      }
    ],
    [
      4,
      null,
      398764591,
      null,
      Infinity,
      0.0,
      2,
      1694793812.3863676,
      1694793812.3879647,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFBO2.py\", line 1022, in train\n    X, X_r = Local_Linear_Embedding(X_scaled, **config_dict)\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/AutoMF/AutoMFBO2.py\", line 164, in Local_Linear_Embedding\n    X_hat = transformer.fit_transform(X)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 799, in fit_transform\n    self._fit_transform(X)\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 746, in _fit_transform\n    self.embedding_, self.reconstruction_error_ = locally_linear_embedding(\n                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/mnt/belinda_local/daniel/home/anaconda3/envs/GenerativeAI/lib/python3.11/site-packages/sklearn/manifold/_locally_linear.py\", line 325, in locally_linear_embedding\n    raise ValueError(\nValueError: output dimension must be less than or equal to input dimension\n",
        "error": "ValueError('output dimension must be less than or equal to input dimension')"
      }
    ]
  ],
  "configs": {
    "1": {
      "eigen_solver": "auto",
      "method": "modified",
      "n_components": 2,
      "n_neighbors": 7,
      "neighbors_algorithm": "ball_tree"
    },
    "2": {
      "eigen_solver": "dense",
      "method": "modified",
      "n_components": 5,
      "n_neighbors": 13,
      "neighbors_algorithm": "auto"
    },
    "3": {
      "eigen_solver": "dense",
      "method": "standard",
      "n_components": 5,
      "n_neighbors": 13,
      "neighbors_algorithm": "kd_tree"
    },
    "4": {
      "eigen_solver": "dense",
      "method": "modified",
      "n_components": 5,
      "n_neighbors": 12,
      "neighbors_algorithm": "kd_tree"
    }
  },
  "config_origins": {
    "1": "Initial Design: Sobol",
    "2": "Initial Design: Sobol",
    "3": "Acquisition Function Maximizer: Random Search (sorted)",
    "4": "Acquisition Function Maximizer: Random Search (sorted)"
  }
}